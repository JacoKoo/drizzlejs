{"version":3,"file":"drizzle.js","sources":["../src/template/common.ts","../src/loader.ts","../src/template/value.ts","../src/renderable.ts","../src/template/cache.ts","../src/template/context.ts","../src/template/template.ts","../src/lifecycle.ts","../src/model.ts","../src/store.ts","../src/view.ts","../src/event.ts","../src/component.ts","../src/application.ts","../src/route.ts","../src/template/helper.ts","../src/template/tag.ts","../src/template/static-tag.ts","../src/template/dynamic-tag.ts","../src/template/block-tag.ts","../src/template/reference-tag.ts","../src/template/text-tag.ts","../src/template/transformer.ts","../src/template/each-tag.ts","../src/template/if-tag.ts","../src/drizzle.ts"],"sourcesContent":["export enum ChangeType { CHANGED, NOT_CHANGED }\nexport type HelperResult = [ChangeType, any, any]\nexport type CustomTransformer = (...args: any[]) => any\nexport type CustomEvent = (isUnbind: boolean, el: Element, cb: (event: any) => void) => void\n\nexport interface EachState {\n    _id: string[]\n    _def: EachDef[]\n    _state: (string | number)[]\n}\n\nexport interface EachDef {\n    name: string // helper id\n    alias: string\n    idx?: string\n    key?: string\n}\n\ntype StaticValue = string | number | boolean\ntype DynamicValue = string\ntype AttributeName = string\n\nexport enum ValueType { STATIC, DYNAMIC, TRANSFORMER }\n\nexport type NormalValue = [ValueType.STATIC, StaticValue] | [ValueType.DYNAMIC, DynamicValue]\nexport type AttributeValue = NormalValue | [ValueType.TRANSFORMER, Transformer]\nexport type Attribute = [AttributeName, AttributeValue]\n","import { Application } from './application'\nimport { Component } from './component'\n\nexport class Loader {\n    protected _app: Application\n    protected _path: string\n    protected _args: any\n\n    constructor(app: Application, path: string, args: any) {\n        this._app = app\n        this._path = path\n        this._args = args\n    }\n\n    load (file, mod: Component): Promise<object> {\n        return this._app.options.getResource(`${this._app.options.scriptRoot}/${this._path}/${file}`)\n    }\n}\n","import { DataContext, EventDef, EventTarget } from './context'\nimport { Transformer } from './transformer'\nimport { ValueType, AttributeValue, EachState } from './common'\n\nexport function resolveEventArguments (ctx: DataContext, me: EventTarget, event: any, def: EventDef): any[] {\n    const result = []\n    def.attrs.forEach(it => {\n        if (it[0] === ValueType.STATIC) {\n            result.push(it[1])\n            return\n        }\n        if (it[0] === ValueType.DYNAMIC) {\n            const ts = tokenize(it[1])\n            const first = ts.shift()\n            if (first === 'event' || first === 'this') {\n                let o = first === 'event' ? event : me\n                o = ts.reduce((acc, key) => {\n                    return acc[key]\n                }, o)\n                result.push(o)\n                return\n            }\n        }\n        result.push(getAttributeValue(ctx, it, me))\n    })\n    return result\n}\n\nexport function getAttributeValue (ctx: DataContext, av: AttributeValue, state: EachState): any {\n    switch (av[0]) {\n    case ValueType.STATIC:\n        return av[1]\n    case ValueType.DYNAMIC:\n        return getValue(ctx, av[1], state)\n    case ValueType.TRANSFORMER:\n        return (av[1] as Transformer).get(ctx, state)\n    }\n}\n\nexport function getValue (ctx: DataContext, key: string, state: EachState) {\n    const ks = tokenize(key)\n    const first = ks.shift()\n    let o = ctx.data\n    const computed = ctx.root._options.computed && ctx.root._options.computed[key]\n    if (computed) {\n        o = computed(o)\n    } else {\n        let oo: any = o\n        if (state._def.some((v, i) => {\n            if (v.idx === first) {\n                oo = state._state[i]\n                return true\n            }\n            oo = oo[v.name][state._state[i]]\n            return v.alias === first\n        })) {\n            o = oo\n        } else {\n            o = o[first]\n        }\n    }\n\n    if (ks.length) {\n        o = ks.reduce((acc, item) => {\n            if (acc == null) return null\n            return acc[item]\n        }, o)\n    }\n\n    return o\n}\n\nconst cache: {[key: string]: string[]} = {}\n\nfunction tokenize(input: string): string[] {\n    if (cache[input]) {\n        return cache[input].slice()\n    }\n    let token = ''\n    const result = [] as string[]\n    let inString = false\n\n    const push = () => {\n        if (token) result.push(token)\n        token = ''\n    }\n\n    for (let i = 0; i < input.length; i++) {\n        const t = input[i]\n        if (inString) {\n            if (t === '\\\\' && input[i + 1] === ']') {\n                token += ']'\n                i++\n                continue\n            }\n            if (t === ']') {\n                push()\n                inString = false\n                continue\n            }\n            token += t\n            continue\n        }\n\n        if (t === '[') {\n            push()\n            inString = true\n            continue\n        }\n\n        if (t === '.') {\n            push()\n            continue\n        }\n        token += t\n    }\n\n    if (token) result.push(token)\n\n    cache[input] = result\n    return result.slice()\n}\n","import { Lifecycle, LifecycleContainer } from './lifecycle'\nimport { Application } from './application'\nimport { CustomEvent } from './template-bk/context'\nimport { Slot } from './template/slot-tag'\nimport { ElementContainer } from './template/context'\nimport { ComponentTemplate } from './template/template'\n\nexport interface RenderOptions extends Lifecycle {\n    cycles?: Lifecycle[]\n    customEvents?: {[name: string]: CustomEvent}\n    events?: {[name: string]: (...args) => void}\n    template?: ComponentTemplate\n    computed?: {[name: string]: (any) => any}\n    actions?: {[name: string]: (cb: (data: any) => Promise<any>, data: object) => void}\n    _file?: string\n}\n\nexport enum ComponentState {\n    CREATED, INITED, RENDERED\n}\n\nexport abstract class Renderable<T extends RenderOptions> extends LifecycleContainer {\n    _target: ElementContainer\n    _options: T\n    ids: {[key: string]: HTMLElement | Renderable<T>} = {}\n    slots: {[key: string]: Slot}\n\n    protected _busy: Promise<any> = Promise.resolve()\n    protected _status = ComponentState.CREATED\n\n    constructor(app: Application, options: T, ...args: Lifecycle[]) {\n        super(app, options, ...args)\n        this._options = options\n    }\n\n    _render (target: ElementContainer) {\n        if (this._status !== ComponentState.INITED) return Promise.resolve()\n\n        this._target = target\n        this._busy = this._busy\n            .then(() => this._doBeforeRender())\n            .then(() => this._doCollect(this.get()))\n            .then(data => this._doRendered(data))\n            .then(() => this._status = ComponentState.RENDERED)\n\n        return this._busy\n    }\n\n    destroy () {\n        if (this._status !== ComponentState.RENDERED) return Promise.resolve()\n\n        this._busy = this._busy\n            .then(() => this._doBeforeDestroy())\n            .then(() => this._doDestroyed())\n            .then(() => this._status = ComponentState.INITED)\n\n        return this._busy\n    }\n\n    _init () {\n        return this._busy = this._busy\n            .then(() => this._doInit())\n            .then(() => this._status = ComponentState.INITED)\n    }\n\n    _event (name, ...args: any[]) {\n        const {events} = this._options\n        if (events && events[name]) events[name].apply(this, args)\n    }\n\n    _action (name: string, ...data: any[]) {\n        const {actions} = this._options\n        if (actions && actions[name]) {\n            actions[name].call(this, (d: any) => {\n                return this._dispatch(name, d)\n            }, ...data)\n            return\n        }\n\n        this._dispatch(name, data[0])\n    }\n\n    abstract get (name?: string): object\n    abstract _dispatch (name: string, data: any): Promise<any>\n}\n","import { EachKey } from './each-tag'\nimport { EachDef, EachState } from './common'\n\nexport class Cache implements EachState {\n    cache: object = {}\n    _id: string[] = []\n    _def: EachDef[] = []\n    _state: (string | number)[] = []\n\n    push (id: string, def: EachDef) {\n        const c = this.getCache()\n        if (!c[id]) c[id] = []\n\n        this._id.push(id)\n        this._def.push(def)\n        this._state.push(0)\n    }\n\n    next (key: EachKey, create: boolean = true) {\n        if (create) {\n            const c = this.getCache()[this._id[this._id.length - 1]];\n            (c as Array<any>).push({KEY: key})\n        }\n        this._state.pop()\n        this._state.push(key)\n    }\n\n    pop (clear?: boolean) {\n        const id = this._id.pop()\n        this._def.pop()\n        this._state.pop()\n\n        if (clear) {\n            delete this.getCache()[id]\n        }\n    }\n\n    getCache (state: EachState = this, excludeLast: boolean = false): object {\n        let o = this.cache\n        state._id.forEach((it, i) => {\n            if (excludeLast && i === state._id.length) return\n            o = o[it]\n            if (!o) return\n            o = (o as any[]).find(iit => iit.KEY === state._state[i])\n        })\n        return o\n    }\n\n    get (key: string): any {\n        return this.getCache()[key]\n    }\n\n    set (key: string, value: any) {\n        this.getCache()[key] = value\n    }\n\n    clear (key: string) {\n        delete this.getCache()[key]\n    }\n}\n","import { Template } from './template'\nimport { Component } from '../component'\nimport { View } from '../view'\nimport { getValue, resolveEventArguments } from './value'\nimport { Cache } from './cache'\nimport { Slot } from './slot-tag'\nimport { EachState, HelperResult, ChangeType, CustomTransformer, AttributeValue } from './common'\n\nexport interface Helper {\n    get (dh: DataContext, state: EachState): any\n}\n\nexport interface ElementContainer {\n    append (ctx: Context, el: Element | Comment, anchor?: Comment)\n    remove (ctx: Context, el: Element | Comment)\n}\n\nexport interface EventTarget extends EachState {\n    _ctx: Context\n    addEventListener (name: string, fn: (e: any) => void, options: any)\n    removeEventListener (name: string, fn: (e: any) => void, options: any)\n}\n\nexport interface EventDef {\n    name: string\n    method: string\n    attrs: AttributeValue[]\n    isAction: boolean\n    fn?: (e: any) => void\n    binder?: (isUnbind: boolean, el: EventTarget) => void\n}\n\nexport interface Context {\n    cache: Cache\n    name (): string // for log\n\n    getEl (key: string): Element | Comment\n    setEl (key: string, el: Element | Comment)\n\n    set (data: object)\n\n    // get value of id (helper id)\n    get (id: string, state?: EachState): HelperResult\n\n    fillState (el: any): EventTarget\n\n    startSvg (): void\n    endSvg (): void\n    createElement (name: string): Element\n\n    bind (isUnbind: boolean, el: EventTarget, eventId: string)\n    trigger (def: EventDef, el: EventTarget, event: any)\n    create (name: string, state?: object): Promise<Component | View>\n    slot (id: string, slot: Slot): void\n}\n\nexport class Waiter {\n    busy: any[] = []\n\n    wait (p: any) {\n        this.busy.push(p)\n    }\n\n    end (): Promise<any> {\n        const bs = this.busy\n        this.busy = []\n        return Promise.all(bs)\n    }\n}\n\nexport abstract class DataContext implements Context {\n    root: Component | View\n    template: Template\n    data: object\n    cache: Cache\n    version: number = 0\n\n    inSvg: boolean = false\n\n    constructor (root: Component | View, template: Template) {\n        this.root = root\n        this.template = template\n        this.cache = new Cache()\n    }\n\n    name (): string {\n        return this.root._options._file\n    }\n\n    getEl (key: string): Element | Comment {\n        return this.cache.get(key)\n    }\n\n    setEl (key: string, el: Element | Comment) {\n        if (el == null) {\n            this.cache.clear(key)\n            return\n        }\n        this.cache.set(key, el)\n    }\n\n    get (id: string, state?: EachState): HelperResult {\n        const c = this.cache.getCache(state || this.cache)\n        const ck = `h_${id}`\n        const ex = c[ck] as [number, HelperResult]\n        if (ex && ex[0] === this.version) {\n            return ex[1]\n        }\n        const old = ex ? ex[1][1] : null\n\n        const v = this.template.helpers[id].get(this, state || this.cache)\n        const type = v === old ? ChangeType.NOT_CHANGED : ChangeType.CHANGED\n        const re = [type, v, old] as HelperResult\n        c[ck] = [this.version, re]\n        return re\n    }\n\n    fillState (el: any): EventTarget {\n        const es = el as EventTarget\n        es._ctx = this\n        es._def = this.cache._def.slice()\n        es._id = this.cache._id.slice()\n        es._state = this.cache._state.slice()\n        return es\n    }\n\n    startSvg () {\n        this.inSvg = true\n    }\n\n    endSvg () {\n        this.inSvg = false\n    }\n\n    createElement (name: string) {\n        return this.inSvg ?\n            document.createElementNS('http://www.w3.org/2000/svg', name) :\n            document.createElement(name)\n    }\n\n    bind (isUnbind: boolean, el: EventTarget, eventId: string) {\n        const def = this.template.events[eventId]\n        const ces = this.root._options.customEvents\n        const ce = (ces && ces[def.name]) || this.root.app.options.customEvents[def.name]\n        if (ce) {\n            ce(isUnbind, el as any as Element, def.fn)\n            return\n        }\n        def.binder(isUnbind, el)\n    }\n\n    trigger (def: EventDef, el: EventTarget, event: any) {\n        const args = resolveEventArguments(this, el, event, def)\n        if (def.isAction) {\n            this.root._action(def.method, ...args)\n            return\n        }\n        this.root._event(def.method, ...args)\n    }\n\n    set (data: object) {\n        this.data = data\n        this.version ++\n    }\n\n    value (key: string, state: EachState): any {\n        return getValue(this, key, state)\n    }\n\n    slot (id: string, slot: Slot): void {\n        this.root.slots[id] = slot\n    }\n\n    abstract transformer (name: string): CustomTransformer | undefined\n    abstract create (name: string, state?: object): Promise<Component | View>\n}\n\nexport class ViewContext extends DataContext {\n    transformer (name: string): CustomTransformer | undefined {\n        const h = (this.root as View)._options.transformers\n        return (h && h[name]) || this.root.app.options.transformers[name]\n    }\n\n    create (name: string, state?: object): Promise<Component | View> {\n        return (this.root as View)._component._createItem(name, state)\n    }\n}\n\nexport class ComponentContext extends DataContext {\n    transformer (name: string): CustomTransformer | undefined {\n        return null\n    }\n\n    create (name: string, state?: object): Promise<Component | View> {\n        return (this.root as Component)._createItem(name, state)\n    }\n}\n","import { Tag, Tags } from './tag'\nimport {\n    Helper, Context, Waiter, ViewContext, ComponentContext, ElementContainer, EventDef, EventTarget\n} from './context'\nimport { Lifecycle } from '../lifecycle'\nimport { Renderable } from '../renderable'\nimport { View } from '../view'\nimport { Component } from '../component'\n\nconst TargetKey = '_t_'\n\nclass RootParent implements ElementContainer {\n    target: ElementContainer\n\n    append (ctx: Context, el: Element | Comment, anchor?: Comment) {\n        if (!this.target) {\n            this.target = ctx.cache.get(TargetKey)\n        }\n        this.target.append(ctx, el, anchor)\n    }\n\n    remove (ctx: Context, el: Element | Comment) {\n        if (!this.target) {\n            this.target = ctx.cache.get(TargetKey)\n        }\n        this.target.remove(ctx, el)\n    }\n}\n\nexport class ElementParent implements ElementContainer {\n    el: HTMLElement\n\n    constructor (el: HTMLElement) {\n        this.el = el\n    }\n\n    append (ctx: Context, el: Element | Comment, anchor?: Comment) {\n        if (anchor) {\n            this.el.insertBefore(el, anchor)\n            return\n        }\n\n        this.el.appendChild(el)\n    }\n\n    remove (ctx: Context, el: Element | Comment) {\n        this.el.removeChild(el)\n    }\n}\n\nexport abstract class Template {\n    tags: {[id: string]: Tag} = {}\n    events: {[id: string]: EventDef} = {}\n    helpers: {[id: string]: Helper} = {}\n    root: Tags\n\n    constructor (root: Tags) {\n        this.root = root\n    }\n\n    tag (...ts: Tag[]) {\n        ts.forEach(it => this.tags[it.id] = it)\n    }\n\n    event (id: string, def: EventDef) {\n        def.fn = function (this: EventTarget, e: any) {\n            this._ctx.trigger(def, this, e)\n        }\n        def.binder = function (this: null, isUnbind: boolean, el: EventTarget) {\n            if (isUnbind) {\n                el.removeEventListener(def.name, def.fn, false)\n                return\n            }\n            el.addEventListener(def.name, def.fn, false)\n        }\n        this.events[id] = def\n    }\n\n    helper (id: string, helper: Helper) {\n        this.helpers[id] = helper\n    }\n\n    abstract context (root: Renderable<any>): Context\n\n    create (): Lifecycle {\n        const me = this\n        const o = {\n            context: null,\n            stage: 'template',\n            init (this: Renderable<any>) {\n                o.context = me.context(this)\n                const w = new Waiter()\n                const p = new RootParent()\n                me.root.forEach(it => {\n                    it.parent = p\n                    it.init(o.context, w)\n                })\n                return w.end()\n            },\n\n            rendered (this: Renderable<any>, data: any) {\n                o.context.set(data)\n                o.context.cache.set(TargetKey, this._target)\n                const w = new Waiter()\n                me.root.render(o.context, w)\n                return w.end()\n            },\n\n            updated (this: Renderable<any>, data: any) {\n                o.context.set(data)\n                const w = new Waiter()\n                me.root.update(o.context, w)\n                return w.end()\n            },\n\n            destroyed (this: Renderable<any>) {\n                const w = new Waiter()\n                me.root.destroy(o.context, w, true)\n                return w.end()\n            }\n        }\n\n        return o as Lifecycle\n    }\n}\n\nexport class ViewTemplate extends Template {\n    context (root: Renderable<any>): Context {\n        return new ViewContext(root as View, this)\n    }\n}\n\nexport class ComponentTemplate extends Template {\n    exportedModels: string[] = []\n\n    constructor(root: Tags, exportedModels: string[]) {\n        super(root)\n        this.exportedModels = exportedModels\n    }\n\n    context (root: Renderable<any>): Context {\n        return new ComponentContext(root as Component, this)\n    }\n}\n","import {Application} from './application'\n\nexport interface Lifecycle {\n    stage?: string\n    init? (): any\n\n    collect? (data: object): object\n\n    beforeRender? (): any\n    rendered? (data: object): any\n\n    beforeUpdate? (): any\n    updated? (data: object): any\n\n    beforeDestroy? (): any\n    destroyed? (): any\n}\n\nconst callIt = (\n    ctx: LifecycleContainer, cycles: Lifecycle[], method: string, reverse = false, args: any[] = []\n): Promise<any> => {\n    return cycles.filter(it => it[method])[reverse ? 'reduceRight' : 'reduce']((acc, it) => {\n        return acc.then(() => it[method].apply(ctx, args))\n    }, Promise.resolve())\n}\n\nexport class LifecycleContainer {\n    app: Application\n    private _cycles: Lifecycle[] = []\n\n    constructor (app: Application, options: {cycles?: Lifecycle[]} & Lifecycle, ...args: Lifecycle[]) {\n        this.app = app\n\n        const cs = options.cycles || []\n        cs.push(options)\n        args.forEach(it => it && cs.push(it))\n        cs.forEach(it => !it.stage && (it.stage = 'default'))\n\n        app.options.stages.forEach(s => cs.forEach(c => {\n            if (c.stage === s) this._cycles.push(c)\n        }))\n    }\n\n    protected _doInit () {\n        return callIt(this, this._cycles, 'init')\n    }\n\n    protected _doCollect (data: object): object {\n        return this._cycles.filter(it => !!it.collect).reduce((acc, item) => item.collect.call(this, acc), data)\n    }\n\n    protected _doBeforeRender () {\n        return callIt(this, this._cycles, 'beforeRender')\n    }\n\n    protected _doRendered (data: object) {\n        return callIt(this, this._cycles, 'rendered', false, [data])\n    }\n\n    protected _doBeforeUpdate () {\n        return callIt(this, this._cycles, 'beforeUpdate')\n    }\n\n    protected _doUpdated (data: object) {\n        return callIt(this, this._cycles, 'updated', false, [data])\n    }\n\n    protected _doBeforeDestroy () {\n        return callIt(this, this._cycles, 'beforeDestroy', true)\n    }\n\n    protected _doDestroyed () {\n        return callIt(this, this._cycles, 'destroyed', true)\n    }\n}\n","export interface ModelOptions {\n    data: Supplier\n}\n\ntype Supplier = () => any\n\nexport class Model {\n    protected _options: ModelOptions\n    protected _data: any\n\n    constructor(options: ModelOptions | Supplier) {\n        const opt = typeof options === 'function' ? { data: options } : options\n        this._options = opt\n        this.set(opt.data())\n    }\n\n    set (data: any) {\n        this._data = data\n    }\n\n    get () {\n        // clone it or make it readonly in dev mode\n        return this._data\n    }\n}\n","import { ModelOptions, Model } from './model'\nimport { Component } from './component'\n\nexport interface StoreOptions {\n    models?: {[key: string]: ModelOptions}\n    actions?: {[key: string]: (payload: any) => void}\n}\n\nexport class Store {\n    private _options: StoreOptions\n    private _models: {[key: string]: Model} = {}\n    private _names: string[] = []\n    private _component: Component\n\n    constructor(mod: Component, options: StoreOptions, updateKey: string) {\n        this._options = options\n        this._component = mod\n        const {models} = options\n        if (models) {\n            this._names = Object.keys(models)\n            this._names.forEach(k => this._models[k] = new Model(models[k]))\n        }\n\n        if (!options.actions) options.actions = {}\n        options.actions[updateKey] = data => {\n            this.set(data)\n        }\n    }\n\n    fire (name: string, data: any) {\n        this._component.fire(name, data)\n    }\n\n    get models () {\n        return this._models\n    }\n\n    get (name?: string) {\n        if (name) return this._models[name].get()\n\n        return this._names.reduce((acc: {[key: string]: any}, item) => {\n            acc[item] = this._models[item].get()\n            return acc\n        }, {})\n    }\n\n    set (data: object) {\n        this._names.forEach(k => (k in data) && this._models[k].set(data[k]))\n    }\n\n    dispatch (name: string, payload: any): Promise<void> {\n        const {actions} = this._options\n        if (!actions || !actions[name]) return Promise.reject(`no action defined: ${name}`)\n        return Promise.resolve(actions[name].call(this, payload))\n    }\n}\n","import { RenderOptions, Renderable, ComponentState } from './renderable'\nimport { Component } from './component'\nimport { CustomTransformer } from './template/common'\n\nexport interface ViewOptions extends RenderOptions {\n    transformers?: {[name: string]: CustomTransformer},\n    state?: object,\n    // components?: {[name: string]: Component}\n}\n\nexport class View extends Renderable<ViewOptions> {\n    _component: Component\n    _state: object = {}\n\n    constructor(mod: Component, options: ViewOptions) {\n        super(mod.app, options, options.template && options.template.create(), ...mod.app.options.viewLifecycles)\n        this._component = mod\n    }\n\n    get slots () {\n        return this._component.slots\n    }\n\n    _init () {\n        if (this._options.state) this.set(this._options.state, true)\n        return super._init()\n    }\n\n    get (key?: string) {\n        if (!key) return this._state\n\n        if (this._options.computed && this._options.computed[key]) {\n            return this._options.computed[key](this._state)\n        }\n\n        return this._state[key]\n    }\n\n    set (data: object, silent: boolean = false) {\n        if (silent || this._status !== ComponentState.RENDERED) {\n            Object.assign(this._state, data)\n            return Promise.resolve()\n        }\n\n        this._busy = this._busy\n            .then(() => this._doBeforeUpdate())\n            .then(() => Object.assign(this._state, data))\n            .then(() => this._doCollect(this.get()))\n            .then(d => this._doUpdated(d))\n\n        return this._busy\n    }\n\n    _dispatch (name: string, data: any) {\n        return this._component._dispatch(name, data)\n    }\n}\n","import { Disposable } from './drizzle'\n\ntype Handler = (data: any) => void\n\nexport class Events {\n    _handlers: {[name: string]: Handler[]} = {}\n\n    on (name: string, handler: (data: any) => void): Disposable {\n        if (!this._handlers[name]) this._handlers[name] = []\n        const hs = this._handlers[name]\n\n        if (hs.indexOf(handler) !== -1) return {dispose: () => {}}\n        hs.push(handler)\n\n        return {\n            dispose: () => {\n                const idx = hs.indexOf(handler)\n                if (idx !== -1) hs.splice(idx, 1)\n            }\n        }\n    }\n\n    fire (name: string, data: any) {\n        if (!this._handlers[name]) return\n        const hs = this._handlers[name].slice()\n        hs.forEach(it => it.call(this, data))\n    }\n}\n","import { RenderOptions, Renderable, ComponentState } from './renderable'\nimport { StoreOptions, Store } from './store'\nimport { Application } from './application'\nimport { Loader } from './loader'\nimport { View, ViewOptions } from './view'\nimport { Events } from './event'\nimport { Disposable } from './drizzle'\nimport { ElementContainer } from './template/context'\n\nexport interface ItemOptions {\n    views?: string[]\n    refs?: string[]\n    components?: {[name: string]: string}\n}\n\nexport interface ComponentOptions extends RenderOptions {\n    store?: StoreOptions\n    items?: ItemOptions\n}\n\nconst UPDATE_ACTION = `update${+new Date()}`\n\nconst clone = (target: any) => {\n    if (Array.isArray(target)) {\n        return target.map(it => clone(it))\n    }\n    if (typeof target === 'object') {\n        return Object.keys(target).reduce((acc: any, it) => {\n            acc[it] = clone(target[it])\n            return acc\n        }, {})\n    }\n    return target\n}\n\ninterface ComponentRenference {\n    [name: string]: {\n        loader: string,\n        path: string\n        args?: any\n    }\n}\n\nexport const componentReferences: ComponentRenference = {}\n\nexport class Component extends Renderable<ComponentOptions> implements Events {\n    _items: {[key: string]: {\n        type: 'view' | 'component'\n        options: ComponentOptions | ViewOptions\n        loader: Loader\n    }} = {}\n    _extraState: object\n    _handlers = {}\n\n    private _store: Store\n    private _loader: Loader\n\n    constructor(app: Application, loader: Loader, options: ComponentOptions, extraState: object = {}) {\n        super(app, options, options.template && options.template.create(), ...app.options.componentLifecycles)\n        this._loader = loader\n        this._extraState = extraState\n        this.slots = {}\n    }\n\n    set (data: object) {\n        if (!this._options.template) return\n\n        const {exportedModels} = this._options.template\n        if (!exportedModels || !exportedModels.length) return\n\n        const d = exportedModels.reduce((acc, item) => {\n            if (data[item]) acc[item] = data[item]\n            return acc\n        }, {})\n\n        return this._status === ComponentState.CREATED ?\n            this._store.dispatch(UPDATE_ACTION, d) : this._dispatch(UPDATE_ACTION, d)\n    }\n\n    get (name?: string) {\n        const obj = this._store.get(name)\n\n        // TODO only works in dev mode\n        return clone(obj)\n    }\n\n    _createItem (name: string, state?: object) {\n        const opt = this._items[name]\n        const item = opt.type === 'view' ?\n            new View(this, opt.options) :\n            new Component(this.app, opt.loader, opt.options, state)\n        return item._init().then(() => item)\n    }\n\n    _dispatch (name: string, payload?: any) {\n        this._busy = this._busy\n            .then(() => this._doBeforeUpdate())\n            .then(() => this._store.dispatch(name, payload))\n            .then(() => this._doCollect(this.get()))\n            .then(data => this._doUpdated(data))\n\n        return this._busy\n    }\n\n    _render (target: ElementContainer) {\n        return super._render(target).then(() => {\n            if (this._status === ComponentState.RENDERED) {\n                const {store} = this._options\n                if (store && store.actions && store.actions.init) {\n                    return this._dispatch('init')\n                }\n            }\n        })\n    }\n\n    _init () {\n        this._store = new Store(this, this._options.store || {}, UPDATE_ACTION)\n        this.set(Object.assign({}, this._extraState))\n        const p = this._loadItems().then(() => super._init())\n        return p\n    }\n\n    on (name: string, handler: (data: any) => void): Disposable {\n        return null\n    }\n\n    fire (name: string, data: any) {\n    }\n\n    private _loadItems (): Promise<any> {\n        const {items} = this._options\n        if (!items) return Promise.resolve()\n\n        let ps: {name: string, type: string, loader: Loader}[] = []\n\n        if (items.views) {\n            ps = ps.concat(items.views.map(it => {\n                return {name: it, type: 'view', loader: this._loader}\n            }))\n        }\n\n        if (items.refs) {\n            ps = ps.concat(items.refs.map(it => {\n                const obj = componentReferences[it]\n                const loader = this.app.createLoader(obj.path, {name: obj.loader, args: obj.args})\n                return {name: it, type: 'component', loader}\n            }))\n        }\n\n        if (items.components) {\n            ps = ps.concat(Object.keys(items.components).map(it => {\n                const path = items.components[it]\n                const loader = this.app.createLoader(path)\n                return {name: it, type: 'component', loader}\n            }))\n        }\n\n        return Promise.all(ps.map((k, i) => ps[i].loader.load(ps[i].type === 'view' ? ps[i].name : 'index', this)))\n            .then(data => {\n                ps.forEach((p, i) => {\n                    this._items[p.name] = {type: p.type as ('view' | 'component'), loader: p.loader, options: data[i]}\n                })\n            })\n    }\n}\n\nObject.getOwnPropertyNames(Events.prototype).forEach(it => {\n    Component.prototype[it] = Events.prototype[it]\n})\n","import { Loader } from './loader'\nimport { Component, ComponentOptions } from './component'\nimport { DrizzlePlugin } from './drizzle'\nimport { Lifecycle } from './lifecycle'\nimport { Events } from './event'\nimport { ElementParent } from './template/template'\nimport { CustomTransformer, CustomEvent } from './template/common'\n\nexport interface ApplicationOptions {\n    stages?: string[]\n    scriptRoot?: string\n    container: HTMLElement\n    entry: string | ComponentOptions\n    customEvents?: {[name: string]: CustomEvent}\n    transformers?: {[name: string]: CustomTransformer}\n    // components?: {[name: string]: Component}\n    componentLifecycles?: Lifecycle[]\n    viewLifecycles?: Lifecycle[]\n    getResource? (path): Promise<object>\n}\n\ninterface LoaderConstructor {\n    new (app: Application, path: string, args?: any): Loader\n}\n\nconst customEvents: {[name: string]: CustomEvent} = {\n    enter (isUnbind: boolean, node: Element, cb: (any) => void) {\n        const ee = function (this: Element, e) {\n            if (e.keyCode !== 13) return\n            e.preventDefault()\n            cb.call(this, e)\n        }\n        if (isUnbind) {\n            node.removeEventListener('keypress', ee, false)\n            return\n        }\n        node.addEventListener('keypress', ee, false)\n    }\n}\n\nexport class Application extends Events {\n    options: ApplicationOptions\n    loaders: {[name: string]: LoaderConstructor} = {}\n    private _plugins: DrizzlePlugin[] = []\n\n    constructor(options: ApplicationOptions) {\n        super()\n        this.options = Object.assign({\n            stages: ['init', 'template', 'default'],\n            scriptRoot: 'app',\n            entry: 'viewport',\n            helpers: {},\n            components: {},\n            componentLifecycles: [],\n            viewLifecycles: []\n        }, options)\n\n        this.options.customEvents = Object.assign(customEvents, this.options.customEvents)\n        this.registerLoader(Loader)\n    }\n\n    registerLoader (loader: LoaderConstructor, name: string = 'default') {\n        this.loaders[name] = loader\n    }\n\n    createLoader (path: string, loader?: {name: string, args?: any}): Loader {\n        if (loader) {\n            return new this.loaders[loader.name](this, path, loader.args)\n        }\n        return new this.loaders.default(this, path)\n    }\n\n    use (plugin: DrizzlePlugin) {\n        plugin.init(this)\n        this.options.componentLifecycles = this.options.componentLifecycles.concat(plugin.componentLifecycles)\n        this.options.viewLifecycles = this.options.viewLifecycles.concat(plugin.viewLifecycles)\n        this._plugins.push(plugin)\n    }\n\n    start (): Promise<any> {\n        return this.startViewport().then(item => {\n            this._plugins.forEach(it => it.started(item))\n        })\n    }\n\n    private startViewport () {\n        let loader: Loader\n\n        const {entry, container} = this.options\n        const create = (lo, options) => {\n            const v = new Component(this, lo, options)\n            return v._init().then(() => v._render(new ElementParent(container))).then(() => v)\n        }\n        if (typeof entry === 'string') {\n            loader = this.createLoader(entry)\n        } else {\n            return create(this.createLoader(null), entry)\n        }\n\n        return loader.load('index', null).then(opt => create(loader, opt))\n    }\n}\n","import { Component } from './component'\nimport { Lifecycle } from './lifecycle'\nimport { View } from './view'\nimport { DrizzlePlugin, Application } from './drizzle'\n\ninterface ActionHandler {\n    action: string\n}\n\ninterface EventHandler {\n    event: string\n}\n\ninterface ComponentHandler {\n    ref: string\n    slot?: string\n    model?: string\n}\n\ntype Handler = DefaultHandler | ActionHandler | EventHandler | ComponentHandler | string\n\ninterface RouteOptions {\n    [route: string]: Handler\n}\n\ndeclare module './component' {\n    interface Component {\n        _router?: Router\n    }\n\n    interface ComponentOptions {\n        routes?: RouteOptions\n    }\n}\n\ninterface DefaultHandler {\n    enter (args: object): Promise<Router>\n    update? (args: object): Promise<any>\n    leave? (): Promise<any>\n}\n\ninterface MatchResult {\n    remain: string[]\n    consumed: string\n    args?: object\n}\n\n// /name\nclass Token {\n    protected key: string\n    protected next: Token\n    protected v = 9\n\n    constructor(key: string, next: Token) {\n        this.key = key\n        this.next = next\n    }\n\n    match (keys: string[]): MatchResult | false {\n        const c = keys[0]\n        return this.doMatch(c, keys.slice(1))\n    }\n\n    value (v: number = 0): number {\n        const vv = v + this.v\n        return this.next ? this.next.value(vv * 10) : vv\n    }\n\n    protected doMatch (key: string, keys: string[]): MatchResult | false {\n        if (key !== this.key) return false\n        if (this.next) {\n            const o = this.next.match(keys)\n            if (!o) return false\n            o.consumed = o.consumed ? `${key}/${o.consumed}` : key\n            return o\n        }\n        return {remain: keys, consumed: key}\n    }\n}\n\n// /:name\nclass ArgToken extends Token {\n    v = 8\n    doMatch (key: string, keys: string[]): MatchResult | false {\n        const oo = {[this.key]: key}\n        if (!this.next) return {remain: keys, args: oo, consumed: key}\n\n        const o = this.next.match(keys)\n        if (o === false) return false\n\n        o.args ? Object.assign(o.args, oo) : (o.args = oo)\n        if (key && o.consumed) o.consumed = `${key}/${o.consumed}`\n        else if (key) o.consumed = key\n        return o\n    }\n}\n\n// /*name\nclass AllToken extends Token {\n    v = 7\n    match (keys: string[]): MatchResult | false {\n        if (!keys.length) return false\n        return { args: {[this.key]: keys}, remain: [], consumed: keys.join('/')}\n    }\n}\n\nconst create = (path) => {\n    const ts = path.trim().split('/').filter(it => !!it)\n    return ts.reduceRight((acc, item) => {\n        if (item.charAt(0) === '*') return new AllToken(item.slice(1), acc)\n        if (item.charAt(0) === ':') return new ArgToken(item.slice(1), acc)\n        return new Token(item, acc)\n    }, null)\n}\n\nclass Router {\n    _prefix: string\n\n    private _component: Component\n    private _keys: Token[] = []\n    private _defs: DefaultHandler[] = []\n    private _currentKey: number = -1\n    private _next: Router\n    private _previous: string[]\n\n    constructor (comp: Component, routes: RouteOptions, prefix: string = '#/') {\n        this._component = comp\n        this._prefix = prefix\n        this.initRoutes(routes)\n    }\n\n    route (keys: string[]) {\n        for (let i = 0; i < this._keys.length; i ++) {\n            const re = this._keys[i].match(keys)\n            if (re) {\n                return this.doRoute(i, re).then(d => {\n                    this._previous = keys\n                    return d\n                })\n            }\n        }\n        return Promise.resolve(false)\n    }\n\n    private leave (): Promise<any> {\n        this._previous = undefined\n        return Promise.resolve().then(() => {\n            if (this._next) return this._next.leave()\n        }).then(() => {\n            const h = this._defs[this._currentKey]\n            if (h && h.leave) return h.leave()\n        })\n    }\n\n    private enter (idx: number, result: MatchResult) {\n        this._currentKey = idx\n        const o = Object.assign({_router_prefix: `${this._prefix}${result.consumed}/`}, result.args)\n        return this._defs[idx].enter(o).then(it => {\n            this._next = it\n            if (it) return it.route(result.remain)\n        })\n    }\n\n    private doRoute (idx: number, result: MatchResult): Promise<any> {\n        const h = this._defs[idx]\n        if (this._currentKey === -1) {\n            return this.enter(idx, result)\n        }\n        if (idx === this._currentKey) {\n            return Promise.resolve().then(() => {\n                if (h.update) return h.update(result.args)\n            }).then(() => {\n                if (this._next) return this._next.route(result.remain)\n            })\n        }\n\n        return this.leave().then(() => {\n            return this.enter(idx, result)\n        })\n    }\n\n    private initRoutes (routes: RouteOptions) {\n        Object.keys(routes).map(key => {\n            return { key, token: create(key) }\n        }).sort((a, b) => b.token.value() - a.token.value()).forEach(it => {\n            this._keys.push(it.token)\n            this._defs.push(this.createHandler(routes[it.key]))\n        })\n    }\n\n    private createHandler (h: Handler): DefaultHandler {\n        if (typeof h === 'string') return this.createComponentHandler({ref: h})\n        if ('enter' in h) return h as DefaultHandler\n        if ('action' in h) return this.createActionHandler(h as ActionHandler)\n        if ('event' in h) return this.createEventHandler(h as EventHandler)\n        if ('ref' in h) return this.createComponentHandler(h as ComponentHandler)\n        throw new Error('unsupported router handler')\n    }\n\n    private createActionHandler (h: ActionHandler) {\n        return {\n            enter: (args: object) => {\n                return this._component._dispatch(h.action, args).then(() => null)\n            },\n            update: (args: object) => {\n                return this._component._dispatch(h.action, args)\n            }\n        }\n    }\n\n    private createEventHandler (h: EventHandler) {\n        return {\n            enter: (args: object) => {\n                this._component._event(h.event, args, this._previous)\n                return Promise.resolve(null)\n            },\n            update: (args: object) => {\n                this._component._event(h.event, args, this._previous)\n                return Promise.resolve()\n            }\n        }\n    }\n\n    private createComponentHandler (h: ComponentHandler) {\n        let item\n        return {\n            enter: (args: object) => {\n                const o = h.model ? {[h.model]: args} : args\n                return this._component._createItem(h.ref, o).then(it => {\n                    const slot = this._component.slots[h.slot || 'default']\n                    return slot.get().then(target => {\n                        slot.setCleaner(w => w.wait(it.destroy()))\n                        return it._render(target)\n                    }).then(() => {\n                        item = it\n                        if (it instanceof Component) return it._router\n                        return null\n                    })\n                })\n            },\n\n            update: (args: object) => {\n                if (!args) return Promise.resolve()\n                const o = h.model ? {[h.model]: args} : args\n                if (item && (item instanceof Component)) return item.set(o)\n                return Promise.resolve()\n            }\n        }\n    }\n}\n\nconst RouterComponentLifecycle: Lifecycle = {\n    stage: 'init',\n    init (this: Component) {\n        const {routes} = this._options\n        if (!routes) return\n        const prefix = (this._extraState as any)._router_prefix\n        this._router = new Router(this, routes, prefix)\n    },\n\n    collect (this: Component, data: object): object {\n        const r = this._router\n        if (r) data['@router'] = r._prefix\n        return data\n    }\n}\n\nconst RouterViewLifecycle: Lifecycle = {\n    collect (this: View, data: object): object {\n        const r = this._component._router\n        if (r) data['@router'] = r._prefix\n        return data\n    }\n}\n\nexport const RouterPlugin: DrizzlePlugin = {\n    componentLifecycles: [RouterComponentLifecycle],\n    viewLifecycles: [RouterViewLifecycle],\n\n    init (app: Application) {\n\n    },\n\n    started (item: Component) {\n        const router = item._router\n        if (!router) return\n        const doIt = () => {\n            const hash = window.location.hash\n            if (hash.slice(0, 2) !== '#/') return\n            const hs = hash.slice(2).split('/').filter(it => !!it)\n            if (!hs.length) return\n            router.route(hs).then(it => {\n                console.log(it)\n            })\n        }\n\n        window.addEventListener('popstate', doIt)\n        doIt()\n    }\n}\n","import { Helper, DataContext } from './context'\nimport { getAttributeValue } from './value'\nimport { AttributeValue, EachState } from './common'\n\nexport const Compare: {[key: string]: (v1: any, v2: any) => boolean} = {\n    '==': (v1, v2) => v1 === v2,\n    '!=': (v1, v2) => v1 !== v2,\n    '>': (v1, v2) => v1 > v2,\n    '<': (v1, v2) => v1 < v2,\n    '>=': (v1, v2) => v1 >= v2,\n    '<=': (v1, v2) => v1 <= v2\n}\n\nabstract class AbstractHelper implements Helper {\n    args: AttributeValue[]\n\n    constructor (...args: AttributeValue[]) {\n        this.args = args\n    }\n\n    arg (idx: number, dc: DataContext, state: EachState): any {\n        if (!this.args[idx]) return ''\n        return getAttributeValue(dc, this.args[idx], state)\n    }\n\n    abstract get (dc: DataContext, state: EachState): any\n}\n\nexport class BoolHelper extends AbstractHelper {\n    get (dc: DataContext, state: EachState): any {\n        if (this.args.length === 1) {\n            return !!this.arg(0, dc, state)\n        }\n\n        const op = this.args[1][1] as string\n        if (!Compare[op]) {\n            throw Error(`${op} is not a valid compare operator, use: ==, !=, >, <, >=, <=`)\n        }\n\n        return Compare[op](this.arg(0, dc, state), this.arg(2, dc, state))\n    }\n}\n\nexport class IfHelper extends AbstractHelper {\n    bool: BoolHelper\n\n    constructor (bool: BoolHelper, ...args: AttributeValue) {\n        super(args)\n        this.bool = bool\n    }\n\n    get (dc: DataContext, state: EachState): any {\n        return this.arg(this.use(dc, state), dc, state)\n    }\n\n    use (dc: DataContext, state: EachState): number {\n        return this.bool.get(dc, state) ? 0 : 1\n    }\n}\n\nexport class UnlessHelper extends IfHelper {\n    use (dc: DataContext, state: EachState): number {\n        return this.bool.get(dc, state) ? 1 : 0\n    }\n}\n\nexport class DelayHelper extends AbstractHelper {\n    name: string\n\n    constructor(name: string, ...args: AttributeValue[]) {\n        super(...args)\n        this.name = name\n    }\n\n    get (dc: DataContext, state: EachState): any {\n        const fn = dc.transformer(this.name)\n        if (!fn) throw new Error(`no transformer found: ${this.name}`)\n        return fn.apply(null, this.args.map((it, i) => this.arg(i, dc, state)))\n    }\n}\n\nexport class EchoHelper extends AbstractHelper {\n    get (dc: DataContext, state: EachState): any {\n        return this.arg(0, dc, state)\n    }\n}\n\nexport class ConcatHelper extends AbstractHelper {\n    get (dc: DataContext, state: EachState): any {\n        return this.args.map((it, idx) => this.arg(idx, dc, state)).join('')\n    }\n}\n\nexport class MultiHelper implements Helper {\n    helpers: Helper[]\n    joiner: string\n\n    constructor (joiner: string, ...helpers: Helper[]) {\n        this.helpers = helpers\n        this.joiner = joiner\n    }\n\n    get (dc: DataContext, state: EachState): any {\n        return this.helpers.map(it => it.get(dc, state)).join(this.joiner)\n    }\n}\n","import { Context, Waiter, ElementContainer } from './context'\n\nexport class Tags {\n    tags: Tag[]\n\n    constructor (tags: Tag[]) { this.tags = tags }\n    init (ctx: Context, waiter: Waiter) { this.tags.forEach(it => it.init(ctx, waiter)) }\n    render (ctx: Context, waiter: Waiter) { this.tags.forEach(it => it.render(ctx, waiter)) }\n    update (ctx: Context, waiter: Waiter) { this.tags.forEach(it => it.update(ctx, waiter)) }\n    forEach (fn: (t: Tag, i: number) => void) { this.tags.forEach(fn)}\n\n    destroy (ctx: Context, waiter: Waiter, domRemove: boolean) {\n        this.tags.forEach(it => it.destroy(ctx, waiter, domRemove))\n    }\n}\n\nexport const emptyTags = new Tags([])\n\nexport abstract class Tag implements ElementContainer {\n    id: string\n    parent: ElementContainer\n    children: Tags = emptyTags\n\n    constructor(id: string, ref?: string) {\n        this.id = id\n    }\n\n    init (ctx: Context, waiter: Waiter) {\n        if (this.children) this.children.init(ctx, waiter)\n    }\n\n    abstract render (ctx: Context, waiter: Waiter)\n    abstract update (ctx: Context, waiter: Waiter)\n    abstract destroy (ctx: Context, waiter: Waiter, domRemove: boolean)\n    abstract append (ctx: Context, el: Element | Comment, anchor?: Comment)\n    abstract remove (ctx: Context, el: Element | Comment)\n}\n","import { Tag } from './tag'\nimport { Context, Waiter } from './context'\n\nexport function setAttribute(el: Element, attr: [string, any, boolean]) {\n    if (attr[2]) {\n        el.setAttribute(attr[0], attr[1])\n        return\n    }\n    el[attr[0]] = attr[1]\n}\n\nexport class StaticTag extends Tag {\n    name: string\n    as: [string, any, boolean][] = []\n    inSvg: boolean = false\n\n    constructor(name: string, id: string, ref?: string) {\n        super(id, ref)\n        this.name = name\n        this.inSvg = name === 'svg'\n    }\n\n    attr (name: string, value: any, useSet?: boolean) {\n        this.as.push([name, value, useSet === true])\n    }\n\n    init (ctx: Context, waiter: Waiter) {\n        if (this.inSvg) ctx.startSvg()\n        ctx.setEl(this.id, this.create(ctx))\n        super.init(ctx, waiter)\n        if (this.inSvg) ctx.endSvg()\n    }\n\n    render (ctx: Context, waiter: Waiter) {\n        this.parent.append(ctx, ctx.getEl(this.id))\n        this.children.render(ctx, waiter)\n    }\n\n    update (ctx: Context, waiter: Waiter) {\n        this.children.update(ctx, waiter)\n    }\n\n    destroy (ctx: Context, waiter: Waiter, domRemove: boolean) {\n        if (domRemove) {\n            this.parent.remove(ctx, ctx.getEl(this.id))\n        }\n        ctx.setEl(this.id, null)\n\n        this.children.destroy(ctx, waiter, false)\n    }\n\n    append (ctx: Context, el: Element | Comment, anchor?: Comment) {\n        const ee = ctx.getEl(this.id)\n        if (anchor) {\n            ee.insertBefore(el, anchor)\n            return\n        }\n        if (!ee) {\n            console.log(this.id, ctx)\n        }\n        ee.appendChild(el)\n    }\n\n    remove (ctx: Context, el: Element | Comment) {\n        ctx.getEl(this.id).removeChild(el)\n    }\n\n    create (ctx: Context): Element {\n        // const element = ctx.isInSvg() ?\n        //     document.createElementNS('http://www.w3.org/2000/svg', this.name) :\n        //     document.createElement(this.name)\n\n        const element = ctx.createElement(this.name)\n        this.as.forEach(it => setAttribute(element, it))\n        return element\n    }\n}\n","import { StaticTag, setAttribute } from './static-tag'\nimport { Context, Waiter, EventTarget } from './context'\nimport { ChangeType, EachState} from './common'\n\nexport class DynamicTag extends StaticTag {\n    das: [string, string, boolean][] = []\n    evs: string[]\n\n    constructor (name: string, id: string, events: string[] = [], ref?: string) {\n        super(name, id, ref)\n        this.evs = events\n    }\n\n    dattr (name: string, helperId: string, useSet?: boolean) {\n        this.das.push([name, helperId, useSet === true])\n    }\n\n    render (ctx: Context, waiter: Waiter) {\n        super.render(ctx, waiter)\n        this.updateAttrs(ctx)\n        if (this.evs.length) {\n            const el = ctx.fillState(ctx.getEl(this.id) as Element)\n            this.evs.forEach(it => ctx.bind(false, el, it))\n        }\n    }\n\n    update (ctx: Context, waiter: Waiter) {\n        super.update(ctx, waiter)\n        this.updateAttrs(ctx)\n        ctx.fillState(ctx.getEl(this.id) as Element)\n    }\n\n    updateAttrs (ctx: Context) {\n        const el = ctx.getEl(this.id)\n        this.das.forEach(it => {\n            const v = ctx.get(it[1])\n            if (v[0] === ChangeType.CHANGED) {\n                setAttribute(el as Element, [it[0], v, it[2]])\n            }\n        })\n    }\n\n    destroy (ctx: Context, waiter: Waiter, domRemove: boolean) {\n        if (this.evs.length) {\n            const el = ctx.getEl(this.id) as any as EventTarget\n            this.evs.forEach(it => ctx.bind(true, el, it))\n        }\n        super.destroy(ctx, waiter, domRemove)\n    }\n}\n","import { Tag } from './tag'\nimport { Context, Waiter } from './context'\n\nexport abstract class BlockTag extends Tag {\n    needAnchor: boolean = false\n\n    constructor (id: string, needAnchor: boolean, ref?: string) {\n        super(id, ref)\n        this.needAnchor = needAnchor\n    }\n\n    init (ctx: Context, waiter: Waiter) {\n        if (this.needAnchor) {\n            const anchor = document.createComment(Object.getPrototypeOf(this).constructor.name)\n            ctx.setEl(this.id, anchor)\n        }\n        super.init(ctx, waiter)\n    }\n\n    render (ctx: Context, waiter: Waiter) {\n        if (!this.needAnchor) return\n        this.parent.append(ctx, ctx.getEl(this.id))\n    }\n\n    destroy (ctx: Context, waiter: Waiter, domRemove: boolean) {\n        this.children.destroy(ctx, waiter, domRemove)\n        if (!this.needAnchor) return\n        if (domRemove) {\n            this.parent.remove(ctx, ctx.getEl(this.id))\n        }\n        ctx.setEl(this.id, null)\n    }\n\n    append (ctx: Context, el: Element | Comment, anchor?: Comment) {\n        if (this.needAnchor && !anchor) {\n            anchor = ctx.getEl(this.id) as Comment\n        }\n        this.parent.append(ctx, el, anchor)\n    }\n\n    remove (ctx: Context, el: Element | Comment) {\n        this.parent.remove(ctx, el)\n    }\n\n    abstract update (ctx: Context, waiter: Waiter)\n}\n","import { BlockTag } from './block-tag'\nimport { Tags } from './tag'\nimport { Context, Waiter, EventTarget, ElementContainer } from './context'\nimport { Component } from '../component'\nimport { View } from '../view'\n\nclass ReferenceContainer implements ElementContainer {\n    ctx: Context\n    target: ElementContainer\n\n    constructor (ctx: Context, target: ElementContainer) {\n        this.ctx = ctx\n        this.target = target\n    }\n\n    append (ctx: Context, el: Element | Comment, anchor?: Comment) {\n        this.target.append(this.ctx, el, anchor)\n    }\n\n    remove (ctx: Context, el: Element | Comment) {\n        this.target.remove(this.ctx, el)\n    }\n}\n\nexport class ReferenceTag extends BlockTag  {\n    name: string\n    events: string[]\n\n    slots: {[id: string]: Tags} = {}\n    attrs: object = {}\n    mappings: [string, string][] = [] // [name, helper-id]\n\n    constructor (id: string, needAnchor: boolean, name: string, events: string[] = []) {\n        super(id, needAnchor)\n        this.name = name\n        this.events = events\n    }\n\n    attr (name: string, value: any) {\n        this.attrs[name] = value\n    }\n\n    map (name: string, helper: string) {\n        this.mappings.push([name, helper])\n    }\n\n    init (ctx: Context, waiter: Waiter) {\n        waiter.wait(ctx.create(this.name, this.attr).then(it => ctx.cache.set(this.id, it)))\n        Object.keys(this.slots).forEach(it => this.slots[it].init(ctx, waiter))\n    }\n\n    render (ctx: Context, waiter: Waiter) {\n        const item = ctx.cache.get(this.id) as View | Component\n        if (this.events.length) {\n            const et = ctx.fillState(item)\n            this.events.forEach(it => ctx.bind(false, et, it))\n        }\n\n        waiter.wait(item.set(this.mappings.reduce((acc, it) => {\n            const [, v, ] = ctx.get(it[1])\n            acc[it[0]] = v\n            return acc\n        }, {})).then(() => {\n            return item._render(new ReferenceContainer(ctx, this))\n        }).then(() => {\n            Object.keys(this.slots).forEach(s => {\n                if (!item.slots[s]) throw new Error(`No slot defined: ${s}`)\n            })\n            return Promise.all(Object.keys(item.slots).map(it => {\n                if (this.slots[it]) {\n                    return item.slots[it].get().then(c => {\n                        const w = new Waiter()\n                        this.slots[it].forEach(s => {\n                            s.parent = c\n                            s.render(ctx, w)\n                        })\n                        return w.end()\n                    })\n                }\n                return item.slots[it].render()\n            }))\n        }))\n    }\n\n    update (ctx: Context, waiter: Waiter) {\n        const item = ctx.cache.get(this.id) as View | Component\n        waiter.wait(item.set(this.mappings.reduce((acc, it) => {\n            const [, v, ] = ctx.get(it[1])\n            acc[it[0]] = v\n            return acc\n        }, {})))\n\n        const w = new Waiter()\n        Object.keys(this.slots).forEach(it => this.slots[it].update(ctx, w))\n        waiter.wait(w.end())\n    }\n\n    destroy (ctx: Context, waiter: Waiter, domRemove: boolean) {\n        const w = new Waiter()\n        Object.keys(this.slots).forEach(it => this.slots[it].destroy(ctx, w, domRemove))\n        waiter.wait(w.end().then(() => {\n            const item = ctx.cache.get(this.id) as View | Component\n            if (this.events.length) {\n                this.events.forEach(it => ctx.bind(true, item as any as EventTarget, it))\n            }\n            return item.destroy()\n        }))\n        super.destroy(ctx, waiter, domRemove)\n    }\n}\n","import { Tag } from './tag'\nimport { Context, Waiter, ElementContainer } from './context'\nimport { ChangeType } from './common'\n\ninterface TextItem {\n    parent: ElementContainer\n    init (ctx: Context)\n    render (ctx: Context)\n    update (ctx: Context)\n    destroy (ctx: Context, domRemove: boolean)\n}\n\nclass Static implements TextItem {\n    parent: Tag\n    id: string\n    value: any\n\n    constructor (id: string, value: any) {\n        this.id = id\n        this.value = value\n    }\n\n    init (ctx: Context) {\n        ctx.setEl(this.id, document.createTextNode(this.value))\n    }\n\n    render (ctx: Context) {\n        this.parent.append(ctx, ctx.getEl(this.id))\n    }\n\n    update (ctx: Context) {}\n\n    destroy (ctx: Context, domRemove: boolean) {\n        if (domRemove) {\n            this.parent.remove(ctx, ctx.getEl(this.id))\n        }\n        ctx.setEl(this.id, null)\n    }\n}\n\nclass Dynamic extends Static {\n    render (ctx: Context) {\n        const el = ctx.getEl(this.id) as Text\n        const [, v, ] = ctx.get(this.value)\n        el.data = v\n\n        super.render(ctx)\n    }\n\n    update (ctx: Context) {\n        const el = ctx.getEl(this.id) as Text\n        const [changed, v, ] = ctx.get(this.value)\n        if (changed === ChangeType.CHANGED) el.data = v\n    }\n}\n\nclass Html extends Static {\n    init (ctx: Context) {\n        ctx.setEl(this.id, document.createElement('noscript'))\n        ctx.setEl(`${this.id}e`, document.createElement('noscript'))\n    }\n\n    render (ctx: Context) {\n        super.render(ctx)\n        this.parent.append(ctx, ctx.getEl(`${this.id}e`))\n        this.update(ctx)\n    }\n\n    update (ctx: Context) {\n        const start = ctx.getEl(this.id) as HTMLElement\n        const end = ctx.getEl(`${this.id}e`)\n\n        const [changed, v, ] = ctx.get(this.value)\n        if (changed === ChangeType.NOT_CHANGED) return\n\n        while (start.nextSibling && start.nextSibling !== end) {\n            start.parentNode.removeChild(start.nextSibling)\n        }\n\n        start.insertAdjacentHTML('afterend', v)\n    }\n\n    destroy (ctx: Context, domRemove: boolean) {\n        if (domRemove) {\n            const start = ctx.getEl(this.id) as HTMLElement\n            const end = ctx.getEl(`${this.id}e`)\n            while (start.nextSibling && start.nextSibling !== end) {\n                start.parentNode.removeChild(start.nextSibling)\n            }\n        }\n        ctx.setEl(`${this.id}e`, null)\n        super.destroy(ctx, domRemove)\n    }\n}\n\nexport class TextTag extends Tag {\n    items: TextItem[]\n\n    constructor (id: string, items: [number, string][], ref?: string) {\n        super(id, ref)\n        this.items = items. map((it, i) => {\n            const iid = `${this.id}${i}`\n            if (it[0] === 2) return new Html(iid, it[1])\n            if (it[0] === 1) return new Dynamic(iid, it[1])\n            return new Static(iid, it[1])\n        })\n    }\n\n    init (ctx: Context, waiter: Waiter) {\n        this.items.forEach(it => {\n            it.parent = this.parent\n            it.init(ctx)\n        })\n    }\n\n    render (ctx: Context, waiter: Waiter) {\n        this.items.forEach(it => it.render(ctx))\n    }\n\n    update (ctx: Context, waiter: Waiter) {\n        this.items.forEach(it => it.update(ctx))\n    }\n\n    destroy (ctx: Context, waiter: Waiter, domRemove: boolean) {\n        this.items.forEach(it => it.destroy(ctx, domRemove))\n    }\n\n    append (ctx: Context, el: Element | Comment, anchor?: Comment) {}\n    remove (ctx: Context, el: Element | Comment) {}\n}\n","import { DataContext } from './context'\nimport { getValue, getAttributeValue } from './value'\nimport { EachState, NormalValue } from './common'\n\nexport class Transformer {\n    value: string\n    end: NormalValue\n    items: TransformerItem[]\n\n    constructor (value: string, items: TransformerItem[], end?: NormalValue) {\n        this.value = value\n        this.items = items || []\n        this.end = end\n    }\n\n    get (dc: DataContext, state: EachState): any {\n        let v = getValue(dc, this.value, state)\n        v = this.items.reduce((acc, item) => item.get(dc, state, acc), v)\n        if (v == null && this.end) {\n            return getAttributeValue(dc, this.end, state)\n        }\n        return v\n    }\n}\n\nexport class TransformerItem {\n    name: string\n    args: NormalValue[]\n\n    constructor(name: string, args: NormalValue[]) {\n        this.name = name\n        this.args = args || []\n    }\n\n    get (dc: DataContext, state: EachState, v: any): any {\n        const fn = dc.transformer(this.name)\n        if (!fn) {\n            throw new Error(`no helper found: ${this.name}`)\n        }\n        const args = this.args.map(it => getAttributeValue(dc, it, state)).concat(v)\n        return fn.apply(null, args)\n    }\n}\n","import { BlockTag } from './block-tag'\nimport { Context, Waiter } from './context'\nimport { Tags } from './tag'\nimport { EachDef, ChangeType } from './common'\n\nconst toKeys = (list: any): EachKey[] => {\n    if (!list) return []\n    return Array.isArray(list) ? list.map((it, i) => i) : Object.keys(list)\n}\n\nexport type EachKey = string | number\n\nexport class EachTag extends BlockTag {\n    def: EachDef\n    loopPart: Tags\n    falsePart: Tags\n\n    constructor (id: string, needAnchor: boolean, def: EachDef, loopPart: Tags, falsePart?: Tags) {\n        super(id, needAnchor)\n        this.def = def\n        this.loopPart = loopPart\n        this.falsePart = falsePart || new Tags()\n    }\n\n    init (ctx: Context, waiter: Waiter) {\n        this.falsePart.init(ctx, waiter)\n        super.init(ctx, waiter)\n    }\n\n    render (ctx: Context, waiter: Waiter) {\n        super.render(ctx, waiter)\n\n        const [, list] = ctx.get(this.def.name)\n        const kv = toKeys(list)\n        if (!kv.length) {\n            this.renderElse(ctx, waiter)\n            return\n        }\n        this.doEach(ctx, kv, () => this.renderBody(ctx, waiter))\n    }\n\n    update (ctx: Context, waiter: Waiter) {\n        const [changed, list, old] = ctx.get(this.def.name)\n        const lkv = toKeys(list)\n        const okv = toKeys(old)\n        const le = !lkv.length\n        const oe = !okv.length\n\n        if (le && oe) {\n            this.falsePart.update(ctx, waiter)\n            return\n        }\n\n        if (changed === ChangeType.NOT_CHANGED) {\n            this.doEach(ctx, lkv, () => this.loopPart.update(ctx, waiter), false)\n            return\n        }\n\n        if (!oe && le) {\n            this.doEach(ctx, okv, () => this.loopPart.destroy(ctx, waiter, true), false)\n            this.renderElse(ctx, waiter)\n            return\n        }\n\n        if (oe && !le) {\n            this.falsePart.destroy(ctx, waiter, true)\n            this.doEach(ctx, lkv, () => this.renderBody(ctx, waiter))\n            return\n        }\n\n        if (lkv.length === okv.length) {\n            this.doEach(ctx, lkv, () => this.loopPart.update(ctx, waiter), false)\n            return\n        }\n\n        if (lkv.length < okv.length) {\n            this.doEach(ctx, lkv, () => this.loopPart.update(ctx, waiter), false)\n            this.doEach(ctx, okv.slice(lkv.length), () => this.loopPart.destroy(ctx, waiter, true), false)\n            return\n        }\n\n        this.doEach(ctx, lkv.slice(0, okv.length), () => this.loopPart.update(ctx, waiter), false)\n        this.doEach(ctx, lkv.slice(okv.length), () => this.renderBody(ctx, waiter))\n    }\n\n    renderElse (ctx: Context, waiter: Waiter) {\n        const w = new Waiter()\n        this.falsePart.init(ctx, w)\n        this.falsePart.render(ctx, w)\n        waiter.wait(w.end())\n    }\n\n    renderBody (ctx: Context, waiter: Waiter) {\n        const w = new Waiter()\n        this.loopPart.init(ctx, w)\n        this.loopPart.render(ctx, w)\n        waiter.wait(w.end())\n    }\n\n    doEach (ctx: Context, list: EachKey[], fn: (EachKey) => void, create: boolean = true) {\n        ctx.cache.push(this.id, this.def)\n        list.forEach(it => {\n            ctx.cache.next(it, create)\n            fn(it)\n        })\n        ctx.cache.pop()\n    }\n\n    destroy (ctx: Context, waiter: Waiter, domRemove: boolean) {\n        const [changed, list, old] = ctx.get(this.def.name)\n        const kv = changed === ChangeType.NOT_CHANGED ? toKeys(list) : toKeys(old)\n        this.doEach(ctx, kv, () => this.loopPart.destroy(ctx, waiter, domRemove), false)\n        if (!kv.length) this.falsePart.destroy(ctx, waiter, domRemove)\n        super.destroy(ctx, waiter, domRemove)\n    }\n}\n","import { BlockTag } from './block-tag'\nimport { Tags, emptyTags } from './tag'\nimport { Context, Waiter } from './context'\nimport { ChangeType } from './common'\n\nexport class IfTag extends BlockTag {\n    bool: string\n    truePart: Tags\n    falsePart: Tags\n\n    constructor (id: string, needAnchor: boolean, bool: string, truePart: Tags, falsePart?: Tags) {\n        super(id, needAnchor)\n        this.bool = bool\n        this.truePart = truePart\n        this.falsePart = falsePart || emptyTags\n    }\n\n    init (ctx: Context, waiter: Waiter) {\n        this.truePart.forEach(it => {\n            it.parent = this.parent\n            it.init(ctx, waiter)\n        })\n        this.falsePart.forEach(it => {\n            it.parent = this.parent\n            it.init(ctx, waiter)\n        })\n        super.init(ctx, waiter)\n    }\n\n    render (ctx: Context, waiter: Waiter) {\n        super.render(ctx, waiter)\n\n        const [, v] = ctx.get(this.bool)\n        this.use(v).render(ctx, waiter)\n    }\n\n    update (ctx: Context, waiter: Waiter) {\n        const [changed, v, old] = ctx.get(this.bool)\n        if (changed === ChangeType.NOT_CHANGED) {\n            this.use(v).update(ctx, waiter)\n            return\n        }\n\n        this.use(old).destroy(ctx, waiter, true)\n        this.use(v).render(ctx, waiter)\n    }\n\n    destroy (ctx: Context, waiter: Waiter, domRemove: boolean) {\n        const [, , v] = ctx.get(this.bool)\n        this.use(v).destroy(ctx, waiter, domRemove)\n        super.destroy(ctx, waiter, domRemove)\n    }\n\n    use (v: any): Tags {\n        return v ? this.truePart : this.falsePart\n    }\n}\n\nexport class UnlessTag extends IfTag {\n    use (v: any): Tags {\n        return v ? this.falsePart : this.truePart\n    }\n}\n","\nimport { Loader } from './loader'\nimport {\n    ComponentTemplate, ViewTemplate, Template\n} from './template/template'\nimport { Application } from './application'\nimport { Lifecycle } from './lifecycle'\nimport { Component } from './component'\nimport { RouterPlugin } from './route'\nimport { IfHelper, UnlessHelper, DelayHelper, EchoHelper } from './template/helper'\nimport { DynamicTag } from './template/dynamic-tag'\nimport { StaticTag } from './template/static-tag'\nimport { ReferenceTag } from './template/reference-tag'\nimport { TextTag } from './template/text-tag'\nimport { Tag, Tags } from './template/tag'\nimport { TransformerItem, Transformer } from './template/transformer'\nimport { EachTag } from './template/each-tag'\nimport { Attribute, AttributeValue, NormalValue, ValueType, EachDef } from './template/common'\nimport { IfTag, UnlessTag } from './template/if-tag'\nimport { EventDef } from './template/context'\n\nexport interface Disposable {\n    dispose (): void\n}\n\nconst innerHelpers = {\n    if: IfHelper, unless: UnlessHelper\n}\n\ninterface NodeConstructor {\n    new (id: string, ref?: string): DynamicTag\n}\n\nconst nodes: {[name: string]: NodeConstructor} = {\n    // TODO window: WindowNode,\n    // app: ApplicationNode\n}\n\nfunction createTag(id: string, name: string, ref?: string): DynamicTag | undefined {\n    if (nodes[name]) return new nodes[name](id, ref)\n}\n\n// nodes\nconst SN = (id: string, name: string, ref?: string) => {\n    const node = createTag(name, id, ref)\n    return node ? node : new StaticTag(name, id, ref)\n}\nconst DN = (id: string, name: string, events: string[], ref?: string) => {\n    const node = createTag(name, id)\n    return node ? node : new DynamicTag(name, id, events, ref)\n}\nconst REF = (id: string, needAnchor: boolean, name: string, events: string[]) => {\n    return new ReferenceTag(id, needAnchor, name, events)\n}\nconst TX = (id: string, ...ss: [number, string][]) => new TextTag(id, ss)\nconst TS = (...ts: Tag[]) => new Tags(ts)\n\n// node attribute\nconst SA = (d: StaticTag | DynamicTag | ReferenceTag, name: string, value: any, useSet?: boolean) => {\n    d.attr(name, value, useSet)\n}\nconst DA = (d: DynamicTag, name: string, helper: string, useSet?: boolean) => d.dattr(name, helper, useSet)\nconst EVD = (tp: Template, id: string, name: string, method: string, isAction: boolean, ...attrs: AttributeValue[]) => {\n    tp.event(id, {name, method, isAction, attrs} as EventDef)\n}\n// const EV = (d: DynamicTag | ReferenceTag, ...events: string[]) => d.event(events)\nconst MP = (d: ReferenceTag, name: string, helper: string) => d.map(name, helper)\n\n// const CO = (d: DynamicNode, name: string, ...hs: Helper[]) => d.component(name, hs)\nconst C = (parent: Tag, ...children: Tag[]) => {\n    parent.children = new Tags(children)\n    children.forEach(it => it.parent = parent)\n}\n\n// attributes\nconst TI = (name: string, ...args: NormalValue[]) => new TransformerItem(name, args)\n\nconst TV = (value: string, end?: NormalValue, ...items: TransformerItem[]) =>\n    [ValueType.TRANSFORMER, new Transformer(value, items, end)] as AttributeValue\nconst SV = (v: string) => [ValueType.STATIC, v] as NormalValue\nconst DV = (v: string) => [ValueType.DYNAMIC, v] as NormalValue\nconst AT = (n: string, v: AttributeValue) => [n, v] as Attribute\n\n// helpers\nconst H = (tp: Template, id: string, n: string | AttributeValue) => {\n    tp.helper(id, Array.isArray(n) ? new EchoHelper(n) : new EchoHelper(DV(n)))\n}\nconst HH = (tp: Template, id: string, n: string, ...args: AttributeValue[]) => {\n    const h = innerHelpers[n] ? new innerHelpers[n](...args) : new DelayHelper(n, ...args)\n    tp.helper(id, h)\n}\n\n// block\nconst EAD = (name: string, alias: string, idx?: string, key?: string) => {\n    return {name, alias, idx, key} as EachDef\n}\nconst EH = (id: string, needAnchor: boolean, def: EachDef, loop: Tags, falseTags?: Tags) => {\n    return new EachTag(id, needAnchor, def, loop, falseTags)\n}\nconst IF = (id: string, needAnchor: boolean, helper: string, trueTags: Tags, falseTags?: Tags) => {\n    return new IfTag(id, needAnchor, helper, trueTags, falseTags)\n}\nconst UN = (id: string, needAnchor: boolean, helper: string, trueTags: Tags, falseTags?: Tags) => {\n    return new UnlessTag(id, needAnchor, helper, trueTags, falseTags)\n}\n\nexport const factory = {\n    SN, DN, TX, REF, SV, DV, AT, H, HH, EVD,\n    EAD, EH, IF, UN, C, SA, DA, TI, TV, MP, TS\n}\n\nexport {\n    ComponentTemplate, ViewTemplate, Application, Loader, RouterPlugin\n}\n\nexport function registerNode(name: string, type: NodeConstructor) {\n    nodes[name] = type\n}\n\n// export function registerRegion(name: string, type: RegionConstructor) {\n//     regions[name] = type\n// }\n\nexport interface DrizzlePlugin {\n    componentLifecycles: Lifecycle[]\n    viewLifecycles: Lifecycle[]\n    init (app: Application): void\n    started (item: Component): void\n}\n"],"names":["ChangeType","ValueType","Loader","app","path","args","_app","_path","_args","file","mod","this","options","getResource","scriptRoot","getAttributeValue","ctx","av","state","STATIC","DYNAMIC","getValue","TRANSFORMER","get","key","ks","tokenize","first","shift","o","data","computed","root","_options","oo","_def","some","v","i","idx","_state","name","alias","length","reduce","acc","item","cache","input","slice","token","result","inString","push","t","ComponentState","Cache","id","def","c","getCache","_id","KEY","pop","clear","excludeLast","forEach","it","find","iit","value","Waiter","p","busy","bs","Promise","all","DataContext","template","_file","el","set","ck","ex","version","old","helpers","re","NOT_CHANGED","CHANGED","es","_ctx","inSvg","document","createElementNS","createElement","isUnbind","eventId","events","ces","customEvents","ce","fn","binder","event","me","attrs","ts","isAction","_action","method","_event","slot","slots","ViewContext","h","transformers","_component","_createItem","ComponentContext","TargetKey","RootParent","anchor","target","append","remove","ElementParent","insertBefore","appendChild","removeChild","Template","_this","tags","e","trigger","removeEventListener","addEventListener","helper","context","w","parent","init","end","_target","render","update","destroy","ViewTemplate","ComponentTemplate","exportedModels","callIt","cycles","reverse","filter","then","apply","resolve","LifecycleContainer","cs","stage","stages","s","_cycles","collect","call","_this2","Renderable","CREATED","_status","INITED","_busy","_doBeforeRender","_doCollect","_doRendered","RENDERED","_this3","_doBeforeDestroy","_doDestroyed","_this4","_doInit","actions","d","_this5","_dispatch","Model","opt","_data","Store","updateKey","models","_names","Object","keys","_models","k","fire","payload","reject","View","create","viewLifecycles","assign","_doBeforeUpdate","_doUpdated","Events","handler","_handlers","hs","indexOf","dispose","splice","UPDATE_ACTION","Date","componentReferences","Component","loader","extraState","componentLifecycles","_loader","_extraState","_store","dispatch","clone","Array","isArray","map","_items","type","_init","babelHelpers.get","store","_loadItems","items","ps","views","concat","refs","obj","createLoader","components","load","getOwnPropertyNames","prototype","node","cb","ee","keyCode","preventDefault","Application","registerLoader","loaders","default","plugin","_plugins","startViewport","started","entry","container","lo","_render","Token","next","doMatch","vv","match","consumed","remain","ArgToken","AllToken","join","Router","comp","routes","prefix","_prefix","initRoutes","_keys","doRoute","_previous","undefined","_next","leave","_defs","_currentKey","_router_prefix","enter","route","_this6","trim","split","reduceRight","charAt","sort","a","b","_this7","createHandler","createComponentHandler","ref","createActionHandler","createEventHandler","Error","_this8","action","_this9","model","_this10","setCleaner","wait","_router","RouterPlugin","r","router","doIt","hash","window","location","log","Compare","v1","v2","AbstractHelper","dc","IfHelper","arg","op","bool","use","UnlessHelper","DelayHelper","transformer","EchoHelper","Tags","joiner","waiter","domRemove","emptyTags","Tag","children","setAttribute","attr","StaticTag","useSet","as","startSvg","setEl","endSvg","getEl","element","DynamicTag","evs","helperId","das","updateAttrs","fillState","bind","BlockTag","needAnchor","createComment","getPrototypeOf","constructor","ReferenceContainer","ReferenceTag","mappings","et","Static","createTextNode","Dynamic","changed","Html","start","nextSibling","parentNode","insertAdjacentHTML","TextTag","iid","Transformer","TransformerItem","toKeys","list","EachTag","loopPart","falsePart","kv","doEach","renderBody","renderElse","lkv","okv","le","oe","IfTag","truePart","UnlessTag","innerHelpers","unless","nodes","createTag","DV","factory","DN","TX","ss","REF","SV","AT","n","H","tp","HH","EVD","EH","loop","falseTags","IF","trueTags","UN","C","SA","DA","dattr","TI","TV","MP","TS"],"mappings":"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"}